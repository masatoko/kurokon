module SDL.Raw.Primitive where

-- Generated by 'scripts/makeffi.hs'

import           Data.Int        (Int16)
import           Data.Word       (Word8, Word32)
import           Foreign.C.Types (CInt (..))
import           Foreign.Ptr     (Ptr)
import           SDL.Raw         (Renderer, Surface)

-- | pixelColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> color(Word32)
foreign import ccall unsafe "pixelColor" pixelColor :: Renderer -> Int16 -> Int16 -> Word32 -> IO CInt

-- | pixelRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "pixelRGBA" pixelRGBA :: Renderer -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | hlineColor: renderer(Renderer *) -> x1(Int16) -> x2(Int16) -> y(Int16) -> color(Word32)
foreign import ccall unsafe "hlineColor" hlineColor :: Renderer -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | hlineRGBA: renderer(Renderer *) -> x1(Int16) -> x2(Int16) -> y(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "hlineRGBA" hlineRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | vlineColor: renderer(Renderer *) -> x(Int16) -> y1(Int16) -> y2(Int16) -> color(Word32)
foreign import ccall unsafe "vlineColor" vlineColor :: Renderer -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | vlineRGBA: renderer(Renderer *) -> x(Int16) -> y1(Int16) -> y2(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "vlineRGBA" vlineRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | rectangleColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> color(Word32)
foreign import ccall unsafe "rectangleColor" rectangleColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | rectangleRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "rectangleRGBA" rectangleRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | roundedRectangleColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> rad(Int16) -> color(Word32)
foreign import ccall unsafe "roundedRectangleColor" roundedRectangleColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | roundedRectangleRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> rad(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "roundedRectangleRGBA" roundedRectangleRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | boxColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> color(Word32)
foreign import ccall unsafe "boxColor" boxColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | boxRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "boxRGBA" boxRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | roundedBoxColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> rad(Int16) -> color(Word32)
foreign import ccall unsafe "roundedBoxColor" roundedBoxColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | roundedBoxRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> rad(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "roundedBoxRGBA" roundedBoxRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | lineColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> color(Word32)
foreign import ccall unsafe "lineColor" lineColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | lineRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "lineRGBA" lineRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | aalineColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> color(Word32)
foreign import ccall unsafe "aalineColor" aalineColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | aalineRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "aalineRGBA" aalineRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | thickLineColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> width(Word8) -> color(Word32)
foreign import ccall unsafe "thickLineColor" thickLineColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word32 -> IO CInt

-- | thickLineRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> width(Word8) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "thickLineRGBA" thickLineRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | circleColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> color(Word32)
foreign import ccall unsafe "circleColor" circleColor :: Renderer -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | circleRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "circleRGBA" circleRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | arcColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> start(Int16) -> end(Int16) -> color(Word32)
foreign import ccall unsafe "arcColor" arcColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | arcRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> start(Int16) -> end(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "arcRGBA" arcRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | aacircleColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> color(Word32)
foreign import ccall unsafe "aacircleColor" aacircleColor :: Renderer -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | aacircleRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "aacircleRGBA" aacircleRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | filledCircleColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> r(Int16) -> color(Word32)
foreign import ccall unsafe "filledCircleColor" filledCircleColor :: Renderer -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | filledCircleRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "filledCircleRGBA" filledCircleRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | ellipseColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rx(Int16) -> ry(Int16) -> color(Word32)
foreign import ccall unsafe "ellipseColor" ellipseColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | ellipseRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rx(Int16) -> ry(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "ellipseRGBA" ellipseRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | aaellipseColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rx(Int16) -> ry(Int16) -> color(Word32)
foreign import ccall unsafe "aaellipseColor" aaellipseColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | aaellipseRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rx(Int16) -> ry(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "aaellipseRGBA" aaellipseRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | filledEllipseColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rx(Int16) -> ry(Int16) -> color(Word32)
foreign import ccall unsafe "filledEllipseColor" filledEllipseColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | filledEllipseRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rx(Int16) -> ry(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "filledEllipseRGBA" filledEllipseRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | pieColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> start(Int16) -> end(Int16) -> color(Word32)
foreign import ccall unsafe "pieColor" pieColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | pieRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> start(Int16) -> end(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "pieRGBA" pieRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | filledPieColor: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> start(Int16) -> end(Int16) -> color(Word32)
foreign import ccall unsafe "filledPieColor" filledPieColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | filledPieRGBA: renderer(Renderer *) -> x(Int16) -> y(Int16) -> rad(Int16) -> start(Int16) -> end(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "filledPieRGBA" filledPieRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | trigonColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> x3(Int16) -> y3(Int16) -> color(Word32)
foreign import ccall unsafe "trigonColor" trigonColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | trigonRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> x3(Int16) -> y3(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "trigonRGBA" trigonRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | aatrigonColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> x3(Int16) -> y3(Int16) -> color(Word32)
foreign import ccall unsafe "aatrigonColor" aatrigonColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | aatrigonRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> x3(Int16) -> y3(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "aatrigonRGBA" aatrigonRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | filledTrigonColor: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> x3(Int16) -> y3(Int16) -> color(Word32)
foreign import ccall unsafe "filledTrigonColor" filledTrigonColor :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word32 -> IO CInt

-- | filledTrigonRGBA: renderer(Renderer *) -> x1(Int16) -> y1(Int16) -> x2(Int16) -> y2(Int16) -> x3(Int16) -> y3(Int16) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "filledTrigonRGBA" filledTrigonRGBA :: Renderer -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Int16 -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | polygonColor: renderer(Renderer *) -> vx(const Int16 *) -> vy(const Int16 *) -> n(CInt) -> color(Word32)
foreign import ccall unsafe "polygonColor" polygonColor :: Renderer -> Ptr Int16 -> Ptr Int16 -> CInt -> Word32 -> IO CInt

-- | polygonRGBA: renderer(Renderer *) -> vx(const Int16 *) -> vy(const Int16 *) -> n(CInt) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "polygonRGBA" polygonRGBA :: Renderer -> Ptr Int16 -> Ptr Int16 -> CInt -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | aapolygonColor: renderer(Renderer *) -> vx(const Int16 *) -> vy(const Int16 *) -> n(CInt) -> color(Word32)
foreign import ccall unsafe "aapolygonColor" aapolygonColor :: Renderer -> Ptr Int16 -> Ptr Int16 -> CInt -> Word32 -> IO CInt

-- | aapolygonRGBA: renderer(Renderer *) -> vx(const Int16 *) -> vy(const Int16 *) -> n(CInt) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "aapolygonRGBA" aapolygonRGBA :: Renderer -> Ptr Int16 -> Ptr Int16 -> CInt -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | filledPolygonColor: renderer(Renderer *) -> vx(const Int16 *) -> vy(const Int16 *) -> n(CInt) -> color(Word32)
foreign import ccall unsafe "filledPolygonColor" filledPolygonColor :: Renderer -> Ptr Int16 -> Ptr Int16 -> CInt -> Word32 -> IO CInt

-- | filledPolygonRGBA: renderer(Renderer *) -> vx(const Int16 *) -> vy(const Int16 *) -> n(CInt) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "filledPolygonRGBA" filledPolygonRGBA :: Renderer -> Ptr Int16 -> Ptr Int16 -> CInt -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

-- | texturedPolygon: renderer(Renderer *) -> vx(const Int16 *) -> vy(const Int16 *) -> n(CInt) -> texture(Surface *) -> texture_dx(CInt) -> texture_dy(CInt)
foreign import ccall unsafe "texturedPolygon" texturedPolygon :: Renderer -> Ptr Int16 -> Ptr Int16 -> CInt -> Ptr Surface -> CInt -> CInt -> IO CInt

-- | bezierColor: renderer(Renderer *) -> vx(const Int16 *) -> vy(const Int16 *) -> n(CInt) -> s(CInt) -> color(Word32)
foreign import ccall unsafe "bezierColor" bezierColor :: Renderer -> Ptr Int16 -> Ptr Int16 -> CInt -> CInt -> Word32 -> IO CInt

-- | bezierRGBA: renderer(Renderer *) -> vx(const Int16 *) -> vy(const Int16 *) -> n(CInt) -> s(CInt) -> r(Word8) -> g(Word8) -> b(Word8) -> a(Word8)
foreign import ccall unsafe "bezierRGBA" bezierRGBA :: Renderer -> Ptr Int16 -> Ptr Int16 -> CInt -> CInt -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt

